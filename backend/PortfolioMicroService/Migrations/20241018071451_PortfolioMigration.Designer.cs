// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortfolioMicroService.Data;

#nullable disable

namespace PortfolioMicroService.Migrations
{
    [DbContext(typeof(PortfolioDBContext))]
    [Migration("20241018071451_PortfolioMigration")]
    partial class PortfolioMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortfolioMicroService.Models.Position", b =>
                {
                    b.Property<Guid>("PositionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CurrencyPairID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("CurrentValueUSD")
                        .HasColumnType("numeric");

                    b.Property<Guid>("PortfolioID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PositionID");

                    b.HasIndex("PortfolioID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("PortfolioMicroService.Models.UserPortfolio", b =>
                {
                    b.Property<Guid>("PortfolioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvailableWalletBalance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("InvestedBalance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uuid");

                    b.HasKey("PortfolioID");

                    b.ToTable("UserPortfolios");
                });

            modelBuilder.Entity("PortfolioMicroService.Models.Position", b =>
                {
                    b.HasOne("PortfolioMicroService.Models.UserPortfolio", null)
                        .WithMany()
                        .HasForeignKey("PortfolioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
